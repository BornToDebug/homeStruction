1. Synopsis

ffmpeg [global_options] {[input_file_options] -i input_file}...{[output_file_options] output_file}...




2. Description

ffmpeg reads from an arbitrary number of inputs specified by the -i option and writes to an arbitrary number of outputs.
Anyithing found on the command line which cannot be interpreted as an option is considered to be an output filename.

Each input or output file can, in principle, contain any number of streams(video/audio/subtitle/...). The allowed number or type of 
stream may be limited by the container format.

	??? What is a container format ???
	A container or wrapper format is a metafile format (file format that can store multiple types of data) 
	whose specification describes how different elements of data coexist in a computer file.
	!!Since the container does not describe how data or metadata is encoded, a program able to identify 
	and open a container file might 
	not be able to decode the contained data.
	Most popular multi-media containers:
	3GP (used by many mobile phones)
	AVI (the standard Microsoft Windows container, pretty old, although high rate compression can be achieved)
	FLV (Flash Video, de facto standard for web-based streaming video over RTMP{Real Time Messaging Protocol})
	MKV (Matroska, not limited to any coding format, as it can hold virtually anything)
	MP4
	???????????????????????????????????

Selecting which streams from which inputs will go into which output is either done automatically or with the -map option (see the 
Stream selection chapter)

To refer to input files in options you must use their indices (0-based). E.g.: the first is 0, the second is 1; 2:3 refers
to the fourth stream in the third input file. (see Stream specifiers chapter)

As a general rule, options are applied to the next specified file. Therefore, order is important, you can have the same option 
on the command line multiple times. Each occurrence is then applied to the next input or output file. 
Exceptions from this rule are the global options, which should be specified first.

Do not mix input and output files - first specify all input files, then all output files. Also do not mix options which 
belong to different files. All options apply ONLY to the next input or output file and are reset between files.

	To set the bitrate of the output file to 64 kbits/s:
	ffmpeg -i input.avi -b:v 64k -bufsize 64k output.avi

	To set the frame rate of the output file to 24 fps:
	ffmpeg -i input.avi -r output.avi

	To force the frame rate of the input file (VALID FOR RAW FORMATS ONLY) to 1 fps and the frame rate of the output file to 24fps:
	ffmpeg -r 1 -i input.m2v -r 24 output.avi

The format option may be needed for raw input files.

	??? What is bitrate ???
	amount of data used to encode video or audio
	affects file size and quality
	higher the bitrate -> better quality, bigger file size
	if you have high resolution and high frame rates, you have to cranck up the bitrate
	higher bitrate stream costs more bandwidth and makes it harder for the viewer to access it
	CBR - Constant Bit Rate, same amount of compression throughout the video, good for streaming
	VBR - Variable Bit Rate, look at every frame and see how much compression it needs
	Passes - how many times can the encoder pass through the video to determine the final encoding
		more passes -> longer render time
	For youtube, it's better to use high bit rate because youtube will also compress it afterwards
	For audio, stick to 128kbps, cut down stereo to mono to save space(bandwidth)
	FILE SIZE = (BIT RATE x LENGTH) / 8
	????????????????????????
	

